{"ast":null,"code":"var _jsxFileName = \"/home/appleeji/Everyshare_reactapp/client/src/container/list/boardList.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport BoardItem from \"./boardItem\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\nimport { withRouter } from \"react-router-dom\";\n\nclass BoardList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this._getList();\n    };\n\n    this.fetchMoreData = () => {\n      setTimeout(() => {\n        if (this.state.currentBoardData.length >= this.state.allBoardData.length) {\n          console.log(\"더 이상 데이터 없음\");\n          this.setState({\n            maxPage: false\n          });\n        }\n\n        this.setState({\n          preBoardPerPage: this.state.boardPerPage,\n          boardPerPage: this.state.boardPerPage + 5,\n          currentBoardData: this.state.currentBoardData.concat(this.state.allBoardData.slice(this.state.preBoardPerPage, this.state.boardPerPage))\n        });\n      }, 1500);\n    };\n\n    this.state = {\n      category: this.props.location.state.category,\n      allBoardData: [],\n      currentBoardData: [],\n      preBoardPerPage: 0,\n      boardPerPage: 0,\n      maxPage: true\n    };\n  }\n\n  _getList() {\n    const search = this.props.location.search;\n    const params = new URLSearchParams(search);\n    const category = params.get(\"category\");\n    console.log(category);\n    axios.get(\"http://localhost:3001/board\", {\n      params: {\n        category: category\n      }\n    }).then(data => {\n      const allBoardDatas = data.data;\n      console.log(allBoardDatas);\n      this.setState({\n        allBoardData: allBoardDatas,\n        preBoardPerPage: this.state.allBoardData.length,\n        maxPage: true\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    const currentSearch = this.props.location;\n    const previousSearch = prevProps.location;\n\n    if (currentSearch !== previousSearch) {\n      this.setState({\n        category: this.props.location.state.category,\n        allBoardData: [],\n        currentBoardData: [],\n        preBoardPerPage: 0,\n        boardPerPage: 0\n      });\n\n      this._getList();\n    }\n  } //데이터 추가로 가져오기 위한 함수\n\n\n  render() {\n    let currentBoardList = this.state.currentBoardData;\n    return React.createElement(\"section\", {\n      id: \"main_contents\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"contents_wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"title_wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, this.state.category), React.createElement(\"select\", {\n      name: \"trade_state\",\n      id: \"board_trade_state\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"\\uC804\\uCCB4 \\uAC70\\uB798 \\uBCF4\\uAE30\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"\\uAC70\\uB798\\uC911\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"\\uAC70\\uB798\\uB300\\uAE30\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"\\uAC70\\uB798\\uC644\\uB8CC\"))), React.createElement(\"div\", {\n      className: \"boardList_wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"boardList_header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"\\uAC70\\uB798\\uC720\\uD615\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"\\uAC70\\uB798\\uC790 \\uC815\\uBCF4\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"\\uC81C\\uBAA9\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"\\uB4F1\\uB85D\\uB0A0\\uC9DC\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"\\uAC70\\uB798\\uC0C1\\uD0DC\")), React.createElement(InfiniteScroll, {\n      pageStart: 0,\n      loadMore: this.fetchMoreData,\n      hasMore: this.state.maxPage,\n      loader: React.createElement(\"div\", {\n        className: \"loader loaderBox\",\n        key: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Loader, {\n        type: \"TailSpin\",\n        color: \"#979797\",\n        height: 40,\n        width: 40,\n        timeout: 3000,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, currentBoardList.map((row, index) => React.createElement(BoardItem, {\n      row: row,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withRouter(BoardList);","map":{"version":3,"sources":["/home/appleeji/Everyshare_reactapp/client/src/container/list/boardList.js"],"names":["React","Component","axios","BoardItem","InfiniteScroll","Loader","withRouter","BoardList","constructor","props","componentDidMount","_getList","fetchMoreData","setTimeout","state","currentBoardData","length","allBoardData","console","log","setState","maxPage","preBoardPerPage","boardPerPage","concat","slice","category","location","search","params","URLSearchParams","get","then","data","allBoardDatas","componentDidUpdate","prevProps","currentSearch","previousSearch","render","currentBoardList","map","row","index"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport BoardItem from \"./boardItem\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\nimport { withRouter } from \"react-router-dom\";\n\nclass BoardList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      category: this.props.location.state.category,\n      allBoardData: [],\n      currentBoardData: [],\n      preBoardPerPage: 0,\n      boardPerPage: 0,\n      maxPage: true,\n    };\n  }\n\n  _getList() {\n    const search = this.props.location.search;\n    const params = new URLSearchParams(search);\n    const category = params.get(\"category\");\n    console.log(category);\n\n    axios.get(\"http://localhost:3001/board\", {\n        params: {\n          category: category,\n        },\n      })\n      .then((data) => {\n        const allBoardDatas = data.data;\n\n        console.log(allBoardDatas);\n        this.setState({\n          allBoardData: allBoardDatas,\n          preBoardPerPage : this.state.allBoardData.length,\n          maxPage : true,\n        });\n      });\n  }\n\n  componentDidMount = () => {\n    this._getList();\n  };\n\n  componentDidUpdate(prevProps) {\n    const currentSearch = this.props.location;\n    const previousSearch = prevProps.location;\n\n    if (currentSearch !== previousSearch) {\n      this.setState({\n        category: this.props.location.state.category,\n        allBoardData: [],\n        currentBoardData: [],\n        preBoardPerPage: 0,\n        boardPerPage: 0,\n      });\n      \n      this._getList();\n\n    }\n  }\n\n  //데이터 추가로 가져오기 위한 함수\n  fetchMoreData = () => {\n    setTimeout(() => {\n\n      if(this.state.currentBoardData.length >= this.state.allBoardData.length) {\n        console.log(\"더 이상 데이터 없음\")\n        this.setState({\n          maxPage : false,\n        })\n      }\n\n      this.setState({\n        preBoardPerPage: this.state.boardPerPage,\n        boardPerPage: this.state.boardPerPage + 5,\n        currentBoardData: this.state.currentBoardData.concat(\n          this.state.allBoardData.slice(\n            this.state.preBoardPerPage,\n            this.state.boardPerPage\n          )\n        ),\n      });\n\n  \n    }, 1500);\n  };\n\n  render() {\n    let currentBoardList = this.state.currentBoardData;\n\n    return (\n      <section id=\"main_contents\">\n        <div id=\"contents_wrap\">\n          <div className=\"title_wrap\">\n            <h3>{this.state.category}</h3>\n            <select name=\"trade_state\" id=\"board_trade_state\">\n              <option>전체 거래 보기</option>\n              <option>거래중</option>\n              <option>거래대기</option>\n              <option>거래완료</option>\n            </select>\n          </div>\n          <div className=\"boardList_wrap\">\n            <div className=\"boardList_header\">\n              <div>거래유형</div>\n              <div>거래자 정보</div>\n              <div>제목</div>\n              <div>등록날짜</div>\n              <div>거래상태</div>\n            </div>\n            <InfiniteScroll\n              pageStart={0}\n              loadMore={this.fetchMoreData}\n              hasMore={this.state.maxPage}\n              loader={\n                <div className=\"loader loaderBox\" key={0}>\n                  <Loader\n                    type=\"TailSpin\"\n                    color=\"#979797\"\n                    height={40}\n                    width={40}\n                    timeout={3000}\n                  />\n                </div>\n              }\n            >\n              {currentBoardList.map((row, index) => (\n                <BoardItem row={row} key={index}></BoardItem>\n              ))}\n            </InfiniteScroll>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default withRouter(BoardList);\n"]},"metadata":{},"sourceType":"module"}